name: Eike Steffen Kohlmeyer
jobTitle: Machine Learning Engineer
location: Munich, Germany
about: >
  Passionate team player experienced in applied Machine Learning,
  particularly NLP. My experience spans the entire MLOps lifecycle, and I
  am skilled in the application of Large Language Models. My high
  intrinsic motivation, skillset, and solution-oriented work style make me
  an excellent fit for your projects.
contacts:
  email: ekohlmeyer21@gmail.com
  linkedin: https://www.linkedin.com/in/eike-kohlmeyer
  github: https://github.com/EikeKohl
  website: https://kohlmeyer-ai.com
  medium: https://medium.com/@EKohlmeyer

technologies:
  - Python
  - SQL
  - scikit-learn
  - NumPy
  - Pandas
  - TensorFlow
  - PyTorch
  - Git
  - Docker
  - Linux
  - AWS
  - Azure
  - dbt
  - DeepSpeed
  - OpenAI
  - Haystack
  - Langchain
  - Terraform
  - Streamlit
  - Vue.js

experience:
  - title: Freelancer
    company: self employed
    location: Munich, Germany
    start: Aug 2023
    end: present
    description: kohlmeyer-ai.com
  - title: Machine Learning Engineer
    company: SCAILEX GmbH
    logo: scailex.png
    location: Munich, Germany
    start: Dec 2021
    end: Aug 2023
    description: >
      I am responsible for the complete MLOps lifecycle including training.
      In this position, I was able to develop my skillset as a machine
      learning practitioner as well as a software engineer. Please refer to
      the "Projects" section for relevant projects and technologies used.
  - title: Data Scientist
    company: Atruvia AG
    logo: atruvia.png
    location: Munich, Germany
    start: Dec 2020
    end: Nov 2021
    description: >
      As a Data Scientist at an IT Service Provider for banks, I developed
      DL / ML applications in a banking context. Please refer to the
      "Projects" section for relevant projects and technologies used.
  - title: Auditor Banks & Asset Management
    company: KPMG AG
    logo: kpmg.png
    location: Zurich, Switzerland
    start: Oct 2018
    end: Dec 2018
    description: ""
  - title: Trainee Audit Asset Management
    company: KPMG Société coopérative
    logo: kpmg.png
    location: Luxembourg, Luxembourg
    start: Feb 2018
    end: Aug 2018
    description: ""

education:
  - degree: Business Analytics M.Sc.
    university: Hochschule Düsseldorf
    description: "Grade: 1.5"
    start: 2019
    end: 2020
    icon: ""
  - degree: Finance, Accounting, Controlling, and Taxes B.Sc.
    university: Fachhochschule Dortmund
    description: "Grade: 1.4"
    start: 2014
    end: 2018
    icon: ""

languages:
  - German
  - English

certificates:
  - name: MLOps Engineering for Production
    issued_by: Coursera
  - name: Specialization NLP
    issued_by: Coursera
  - name: Deep Learning Specialization
    issued_by: Coursera
  - name: Tensorflow Developer
    issued_by: Google
  - name: Tensorflow Advanced Techniques
    issued_by: Coursera
  - name: Azure Data Scientist Associate
    issued_by: Microsoft

projects:
  - title: AI Lawyer Chatbot
    abstract: Research and prototyping of German LLM using RLHF in multi-node, multi-GPU environment
    description:
      industry: Legal Tech
      objective: >
        The core objective of this project was to conduct research and prototype an <b>instruction-based, 
        German Legal Language Model (LLM)</b> utilizing Reinforcement Learning from Human Feedback <b>(RLHF)</b>. 
        This LLM was designed to possess advanced capabilities including comprehending legal cases, 
        discerning relevant legal contexts, and independently generating pertinent inquiries to gather 
        information crucial to a legal claim.
      approach: >
        The first challenge was to generate a good quality annotated instruction dataset to perform the
        RLHF training. Once the dataset was generated the next hurdle was to perform <b>multi-node, 
        multi-GPU training</b> of LLMs on <b>AWS</b> & <b>Azure</b>. 
        Since RLHF was a brand new technique, I used and contributed
        to open-source libraries, such as 
        <b><a href="https://github.com/nebuly-ai/nebuly/tree/main/optimization/chatllama">chatllama</a></b> 
        by nebuly.ai (see <a href="https://github.com/nebuly-ai/nebuly/pull/316">Pull Request 316</a>
        and <a href="https://github.com/nebuly-ai/nebuly/pull/326">Pull Request 326</a>).
        Throughout this project I had to read, comprehend, and <b>implement</b> multiple
        <b>state-of-the-art Machine Learning papers</b>.
    categories:
      - LLM
      - RLHF
      - Machine Learning
    techStack:
      - AWS
      - AWS Sagemaker
      - Azure
      - DeepSpeed
      - Huggingface
      - OpenAI
      - PyTorch
    duration: 3 months
    image: ai-lawyer.png
  - title: Paper Q&A Web Application
    abstract: >-
      Enhancement of LLM text generation using contextual information to enable
      fact-based question answering to quickly and efficiently understand research papers
      and be able to look up information
    description:
      industry: Personal Use
      objective: >
        The era of <b>Large Language Models (LLM)</b> has come and with the hype and the current power of
        innovation comes a huge flood of new developments both in proprietary context as well as in the
        open source world. To be able to always be up to date and to deliver <b>state of the art solutions</b>
        as a <b>Machine Learning Engineer / Data Scientist</b>, it is necessary to <b>quickly understand</b> whether 
        a <b>paper</b> is relevant, understand the content of the paper, and be able to look up certain facts quickly.
        In the sense of the saying "fight fire with fire", let's use LLMs to understand LLMs.
      approach: >
        The crux is to <b>intelligently incorporate</b> the available <b>context information</b> like a specific or even
        multiple paper(s) into an LLM's text generation. The context has to be chunked into processable units,
        relevant context has to be selected, and we have to ensure that the answer is <b>fact-based</b> and not
        hallucinated by the LLM.
        To achieve this, I decided to use <b>deepset's GenerativeQAPipeline</b> along with an <b>OpenAIAnswerGenerator</b>.
        There are other LLM pipelining tool's like LangChain, however, for this project I decided to go for 
        deepset as I have used it before and save LangChain for my next project. Using <b>FAISS</b>,
        my sentence level chunked papers will be embedded and stored in a <b>vector database</b>. This allows to retrieve
        relevant context using cosine similiarity between the embedded query vector and the respective context
        vectors. There are still adjustments to be implement to ensure factual correctness and further improve
        the context retrieval, but my <b>streamlit app</b> that also displays the retrieved context matches enables the
        user to perform sanity checks on the answer or even look up the actual text paragraphs in the original paper.
      result: The <b>streamlit</b> app including <b>terraform</b> IaC for deployment on <b>AWS</b> can be found in the linked GitHub repo.
      deployment: AWS ECR + ECS incl. custom domain on AWS Route 53 and AWS Cognito authorization
    categories:
      - Web Application
      - Machine Learning
      - LLM
      - Retrieval Augmented Generation
      - CICD
    techStack:
      - AWS
      - AWS Cloudfront
      - AWS Cognito
      - AWS EC2
      - AWS ECR
      - AWS ECS
      - Azure
      - Deepset
      - HayStack
      - Huggingface
      - OpenAI
      - Streamlit
      - Terraform
    duration: 3 days
    githubLink: https://github.com/EikeKohl/paperqa-web-app
    mediumLink: https://medium.com/@EKohlmeyer/deploying-a-streamlit-web-app-on-aws-with-authentication-using-aws-cognito-a-comprehensive-guide-1da9e7ae4726
    image: paperqa.png
  - title: Multi Stage Verdict Analysis Web Application using ChatGPT
    abstract: >-
      Web application for the analysis of incoming verdicts to formulate statements of appeal
      based on the verdicts content.
    description:
      industry: Legal Tech
      objective: >
        If a lawyer wants to appeal for a verdict, they have to provide reasons in a <b>statement of appeal</b>.
        To do so, the critical text passages in the verdict have to be identified and the statement has to be written.
        This can be a <b>time consuming</b> task as the verdicts are often very complex and long texts. The <b>goal</b> of
        the project was to <b>decrease</b> the <b>manual effort</b> necesary by <b>increasing</b> the <b>level of automation</b>.
      approach: >
        The idea was to first <b>identify relevant text passages</b> in the input verdict using regex.
        Then I implemented a <b>prompt chain</b>, i.e. a <b>multi stage ChatGPT prompting approach</b> to first analyse the verdict
        regarding critical text passages through well designed <b>prompt engineering</b> and, based on the analysis, summarize
        the findings to formulate fitting statements of appeal.
      result: >
        Results are generated once a verdict arrives so that the app loads the <b>pre-generated results</b> to enable
        the user to quickly <b>fact check the analysis summary</b> to approve the statement of appeal.
      deployment: AWS ECR + ECS incl. custom domain on AWS Route 53 and AWS Cognito authorization
    categories:
      - Web Application
      - Machine Learning
      - LLM
      - Retrieval Augmented Generation
      - CICD
      - Prompt Engineering
    techStack:
      - AWS
      - AWS Cloudfront
      - AWS Cognito
      - AWS EC2
      - AWS ECR
      - AWS ECS
      - Azure
      - HayStack
      - Huggingface
      - LangChain
      - OpenAI
      - Streamlit
      - Terraform
    duration: 3 months
    image: information-retrieval.png
  - title: Information Extraction
    abstract:  >-
      Training and deployment of information extraction models, 
      including Named Entity Recognition in the legal domain, using transformers with MLflow on Sagemaker.
    description:
      industry: Legal Tech
      objective: >
        The primary objective of this project was to establish a <b>comprehensive pipeline for training, 
        evaluating, deploying, and monitoring information extraction models</b>. 
        Within the context of the legal domain, the focus was on implementing <b>Named Entity Recognition (NER)</b> 
        techniques to accurately extract crucial details from various forms of correspondence, 
        including those from clients, courts, and insurance entities.
      approach: >
        Leveraging cutting-edge technology, I employed <b>transformers-based architectures</b> and devised a <b>BiLSTM-CRF 
        ensemble model approach</b>. This amalgamation allowed for enhanced contextual understanding and 
        robust entity recognition. The ensemble method aimed to leverage the strengths of both 
        architectures to attain more accurate NER outcomes.
        To achieve optimal results, extensive experiments were carried out. <b>Model training experiments</b> were 
        executed on <b>Sagemaker</b>, harnessing its scalability and efficiency. The training process was managed 
        through <b>MLflow</b>, allowing for systematic tracking of experiments, facilitating transparency, 
        reproducibility, and informed decision-making.
      deployment: AWS Lambda + AWS SNS / SQS
    categories:
      - Machine Learning
      - CICD
      - MLOps
    techStack:
      - AWS
      - AWS Lambda
      - AWS Sagemaker
      - GitLab
      - Huggingface
      - MLflow
      - PyTorch
    duration: 1.5 years
    image: information-extraction.png
  - title: Document Classification
    abstract: >
      Training, Evaluation, and Deployment of document classification models for a legal
      tech company with high accuracy.
    description:
      industry: Legal Tech
      objective: >
        <b>Input and output management</b> for correspondence with clients, insurers, and courts constitutes 
        a <b>significant</b> cost factor for legal professionals and law firms in Germany. 
        The initial stride towards automating incoming correspondence involves the <b>automatic identification 
        of document types</b>, enabling subsequent document-specific processes to be executed flawlessly and 
        efficiently. The objective of the project was thus to achieve a <b>highly precise machine 
        learning-based classification</b> of a <b>substantial volume of incoming documents</b>.
      approach: >
        Certain subsets of document types were received through specific channels, thus to enhance the 
        accuracy of classification outcomes, <b>channel-specific models</b> were trained. In addition to 
        <b>state-of-the-art transformer</b> architectures, <b>simpler document embedding-based baseline models</b> 
        were employed. Among these baseline models, one model prevailed over the transformer models 
        due to factors such as training and inference time, model size, and performance. The training 
        experiments were conducted using <b>Sagemaker</b> and tracked within <b>MLflow</b>.
      result: <b>95% accuracy</b> with an <b>automation rate of 80%</b> of 500,000+ documents
      deployment: AWS Lambda + AWS SNS / SQS
    categories:
      - Machine Learning
      - CICD
      - MLOps
    techStack:
      - AWS
      - AWS Lambda
      - AWS Sagemaker
      - GitLab
      - Huggingface
      - MLflow
      - PyTorch
    duration: 1.5 years
    image: document-classification.png

recommendations:
  - name: Carlo Bachheibl
    title: CTO, SCAILEX GmbH
    relation: Employer
    text: >-
      Eike is a highly solution-oriented and structured AI developer with excellent industry knowledge 
      and extensive hands-on experience. His tasks primarily included data preparation, model training, 
      and NLP based automation. Of particular note is his research and prototype development of a German 
      LLM using RLHF in a multi-node, multi-GPU environment. In addition, Eike has successfully implemented 
      MLOps and CICD for machine learning components in an AWS production environment. His expertise and 
      practical approach make him a valuable asset to any AI team or AI project.
  - name: LinkedIn Member
    title: Senior Machine Learning Engineer
    relation: Former Team Colleague
    text: >-
      I had the privilege of working alongside Eike on several challenging machine learning projects, 
      and I wholeheartedly recommend him for his exceptional skills and dedication. 
      Throughout our collaboration, he consistently impressed me with his ability to effectively 
      solve real-world problems. Eike demonstrated remarkable problem-solving abilities, tackling 
      intricate issues with perseverance and ingenuity. His meticulous attention to detail and commitment 
      to producing high-quality results were truly commendable. Moreover, his exceptional teamwork and 
      effective communication skills greatly contributed to the success of our projects. 
      It was a pleasure working with Eike.
  - name: Rail Chamidullin
    title: Machine Learning Engineer
    relation: Former Team Colleague
    text: >-
      I worked with Eike on Machine Learning projects at SCAILEX (legal tech). 
      He helped me a lot to get started and to understand internal processes for NLP-based automation. 
      Eike is a very dedicated and productive person. He took extra steps to gain new skills and develop 
      more efficient solutions for the team. It was a pleasure collaborating with Eike, and 
      I highly recommend his expertise.
